name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine hatch
        
    - name: Build package
      run: python -m build
      
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog from git commits
        if [ $(git tag -l | wc -l) -gt 1 ]; then
          PREVIOUS_TAG=$(git tag --sort=-version:refname | sed -n '2p')
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s (%h)")
        fi
        
        # Create release notes
        cat > RELEASE_NOTES.md << EOF
        # Release $VERSION
        
        ## Changes
        $CHANGELOG
        
        ## Installation
        
        \`\`\`bash
        pip install govsecure-ai-platform==$VERSION
        \`\`\`
        
        ## Docker
        
        \`\`\`bash
        docker pull ghcr.io/${{ github.repository }}:$VERSION
        \`\`\`
        EOF
        
    - name: Get package files
      id: package_files
      run: |
        echo "wheel_file=$(find dist -name "*.whl" -type f)" >> $GITHUB_OUTPUT
        echo "tar_file=$(find dist -name "*.tar.gz" -type f)" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.changelog.outputs.VERSION }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        files: |
          ${{ steps.package_files.outputs.wheel_file }}
          ${{ steps.package_files.outputs.tar_file }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 